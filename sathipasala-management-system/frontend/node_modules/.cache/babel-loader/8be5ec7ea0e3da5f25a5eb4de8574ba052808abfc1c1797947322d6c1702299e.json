{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sathipasala\\\\sathipasala-management-system\\\\frontend\\\\src\\\\components\\\\common\\\\ClassBadge.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClassBadge = ({\n  classCode,\n  showName = true,\n  showSinhala = true\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const getBadgeStyle = code => {\n    switch (code) {\n      case 'ADH':\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200 border border-gray-300';\n      case 'MET':\n        return 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200';\n      case 'KHA':\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n      case 'NEK':\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200';\n    }\n  };\n  if (!classCode) return null;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `px-2 py-1 rounded text-xs font-medium ${getBadgeStyle(classCode)}`,\n    children: [showName && t(`admin.classes.${classCode}.name`), showName && showSinhala && ` (${t(`admin.classes.${classCode}.nameSi`)})`]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ClassBadge, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ClassBadge;\nexport default ClassBadge;\nvar _c;\n$RefreshReg$(_c, \"ClassBadge\");","map":{"version":3,"names":["React","useTranslation","jsxDEV","_jsxDEV","ClassBadge","classCode","showName","showSinhala","_s","t","getBadgeStyle","code","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Sathipasala/sathipasala-management-system/frontend/src/components/common/ClassBadge.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst ClassBadge = ({ classCode, showName = true, showSinhala = true }) => {\r\n  const { t } = useTranslation();\r\n  \r\n  const getBadgeStyle = (code) => {\r\n    switch(code) {\r\n      case 'ADH': \r\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200 border border-gray-300';\r\n      case 'MET': \r\n        return 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200';\r\n      case 'KHA': \r\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\r\n      case 'NEK': \r\n        return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';\r\n      default: \r\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-200';\r\n    }\r\n  };\r\n  \r\n  if (!classCode) return null;\r\n  \r\n  return (\r\n    <span className={`px-2 py-1 rounded text-xs font-medium ${getBadgeStyle(classCode)}`}>\r\n      {showName && t(`admin.classes.${classCode}.name`)}\r\n      {showName && showSinhala && ` (${t(`admin.classes.${classCode}.nameSi`)})`}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ClassBadge;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAC;EAAEC,SAAS;EAAEC,QAAQ,GAAG,IAAI;EAAEC,WAAW,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EACzE,MAAM;IAAEC;EAAE,CAAC,GAAGR,cAAc,CAAC,CAAC;EAE9B,MAAMS,aAAa,GAAIC,IAAI,IAAK;IAC9B,QAAOA,IAAI;MACT,KAAK,KAAK;QACR,OAAO,sFAAsF;MAC/F,KAAK,KAAK;QACR,OAAO,uEAAuE;MAChF,KAAK,KAAK;QACR,OAAO,uEAAuE;MAChF,KAAK,KAAK;QACR,OAAO,+DAA+D;MACxE;QACE,OAAO,+DAA+D;IAC1E;EACF,CAAC;EAED,IAAI,CAACN,SAAS,EAAE,OAAO,IAAI;EAE3B,oBACEF,OAAA;IAAMS,SAAS,EAAE,yCAAyCF,aAAa,CAACL,SAAS,CAAC,EAAG;IAAAQ,QAAA,GAClFP,QAAQ,IAAIG,CAAC,CAAC,iBAAiBJ,SAAS,OAAO,CAAC,EAChDC,QAAQ,IAAIC,WAAW,IAAI,KAAKE,CAAC,CAAC,iBAAiBJ,SAAS,SAAS,CAAC,GAAG;EAAA;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEX,CAAC;AAACT,EAAA,CA1BIJ,UAAU;EAAA,QACAH,cAAc;AAAA;AAAAiB,EAAA,GADxBd,UAAU;AA4BhB,eAAeA,UAAU;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}